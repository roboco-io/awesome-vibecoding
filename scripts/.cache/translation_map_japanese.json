{
  "line_0_66": {
    "source": "# Awesome Vibe Coding\n\n*Language: [English](README.md) | [한국어](README.ko.md) | [日本語](README.ja.md)*\n\n[Vibe Coding](https://en.wikipedia.org/wiki/Vibe_coding) is an AI-assisted programming approach where users simply describe their problem, and AI generates the necessary code without requiring the developer to deeply understand or engage with detailed code logic. Programmers entrust coding tasks to the AI's intuition (\"vibes\") and capabilities, often ignoring detailed implementations. This magical-like experience allows even inexperienced programmers to build software solutions previously requiring extensive development teams, challenging traditional assumptions of software engineering complexity.\n\nThe term **\"Vibe Coding\"** was coined by AI researcher Andrej Karpathy in February 2025. Karpathy described using advanced voice-recognition technologies such as *SuperWhisper* to interact passively with AI, relying entirely on AI's intuitive coding abilities. He emphasized a hands-off approach, primarily instructing and observing outcomes, and only intervening when necessary.\n\n## Projects/Platforms/Tools/Services\n\n- [Github Copilot](https://github.com/features/copilot)- GitHub Copilot is an AI-powered pair programmer designed to assist developers by automatically suggesting code and entire functions in real-time. Developed collaboratively by GitHub and OpenAI, it leverages advanced machine learning to interpret the context in your code editor and provide intelligent, context-aware suggestions.\n\n- [Windsurf](https://codeium.com/windsurf) - Windsurf, developed under the Codeium umbrella, is an AI-driven solution designed to optimize code generation and developer workflows. It leverages advanced language models to assist programmers in crafting and refining code, offering a seamless experience that accelerates both prototyping and production development.\n\n- [Cursor](https://www.cursor.com/) - Cursor is an AI-integrated code editor designed to accelerate and simplify software development. By combining intuitive editing features with advanced generative AI, Cursor empowers both new and experienced developers to write, debug, and refine code more efficiently\n\n- [Claude Code](https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview) - Claude Code is a specialized variant of Anthropic’s Claude, designed to assist with code-related tasks through natural language interactions. By combining Claude’s advanced language capabilities with developer-centric features, Claude Code can generate, explain, and refine code to improve both productivity and software quality.\n\n- [Trae AI](https://www.futuretools.io/tools/trae-ai) - Trae AI is an advanced AI-driven platform designed to help individuals and businesses create high-quality content and optimize their brand storytelling. By leveraging cutting-edge language models, Trae AI streamlines the creative process—whether you’re generating text for marketing materials, social media campaigns, or strategic brand communication. With its intuitive interface and data-driven insights, Trae AI offers a faster, smarter way to ideate, draft, and refine content, enabling users to maintain a consistent brand voice and resonate with their target audience. The platform also integrates performance analytics to help users measure engagement and optimize their strategies in real time.\n\n- [AlphaCode](https://alphacode.deepmind.com/) - AlphaCode, developed by DeepMind, represents a significant milestone in the field of AI-driven coding. Designed to tackle competitive programming challenges, AlphaCode leverages advanced language models to interpret problem statements, generate high-quality code solutions, and perform reasoning steps akin to those of human programmers. \n\n- [Replit Ghostwriter](https://replit.com/learn/intro-to-ghostwriter) - Replit Ghostwriter is an AI-powered coding assistant integrated into the Replit platform, designed to help developers at all skill levels write, debug, and optimize code. By combining contextual understanding with interactive prompts, Ghostwriter streamlines the software development process and enables quick prototyping. \n\n- [OpenManus](https://github.com/mannaandpoem/OpenManus) - OpenManus is an open-source framework aimed at simplifying and streamlining the process of academic manuscript creation. By integrating modern collaboration techniques and customizable workflows, it empowers researchers, writers, and teams to produce well-structured documents more efficiently.\n\n- [Cline](https://github.com/cline/cline) - Cline is an open-source project that provides an interactive command-line environment with a focus on modern development practices and extensibility. By combining the traditional power of a text-based interface with additional tooling, Cline aims to enhance productivity and offer a streamlined workflow for developers, system administrators, and hobbyists alike.\n\n- [Duet AI for Google Workspace](https://workspace.google.com/blog/product-announcements/duet-ai?hl=en) - Duet AI is a collaborative, AI-driven solution by Google designed to enhance productivity and streamline workflows within Google Workspace. By leveraging generative AI, Duet AI aims to help users handle a wide range of tasks\n\n- [Roo Code](https://github.com/RooVetGit/Roo-Code) - Roo Code is an AI-driven assistant that lives in your editor, streamlining the entire development process. Equipped with natural language understanding, it can read and write files directly in your workspace, run terminal commands, and even automate browser tasks. By integrating with any OpenAI-compatible or custom AI model, Roo Code offers a highly adaptable coding environment that supports various roles, from a flexible coding partner or system architect to specialized positions like QA engineer or product manager.\n\n## Guides/Manual/Best Practices/Tutorials/Blogs\n\n- [Vibe Coding Manual](https://www.reddit.com/r/ChatGPTCoding/comments/1j5l4xw/vibe_coding_manual/) - This Reddit post on the r/ChatGPTCoding subreddit explores the “Vibe Coding Manual,” offering insights into a novel coding approach powered by ChatGPT. It shares tips, examples, and personal experiences on how human-AI collaboration can lead to more intuitive and flexible programming methods, helping developers enhance their skills and discover creative solutions.\n\n- [Here’s how I use LLMs to help me write code](https://simonwillison.net/2025/Mar/11/using-llms-for-code/) - In his blog post, Simon Willison explores how large language models (LLMs) can help with coding tasks such as writing, reviewing, and explaining code. He highlights examples of prompts that work well, discusses the limitations and risks—such as incorrect or incomplete outputs—and provides insights into effective ways to integrate LLMs into a developer’s workflow. Willison also underscores the importance of human oversight to ensure accuracy and maintain quality, illustrating both the potential and the challenges of relying on AI-generated code.\n\n## YouTube\n- [Vibe Coding Tutorial and Best Practices](https://www.youtube.com/watch?v=YWwS911iLhg&t=907s) - This video discusses \"vibe coding,\" which involves using AI agents in coding environments like Cursor or Windsurf to automate the entire application development process. The speaker shares their experiences and best practices for maximizing the effectiveness of these AI agents, including specifying detailed instructions, utilizing rules to guide the AI's behavior, and navigating the limitations of current models. They also highlight the potential for increased coding accessibility and efficiency through these tools.\n\n- [Vibe Coding Is The Future](https://www.youtube.com/watch?v=IACHfKmZMr8&t=1606s) - This podcast episode discusses \"Vibe Coding,\" a term coined by Andrej Karpathy, referring to a coding style where developers embrace AI tools and iterate rapidly, potentially transforming the role of software engineers. The hosts, partners at Y Combinator, surveyed founders in their current batch to understand how AI is changing their workflows and the future of software engineering. The discussion highlights the shift towards product-focused engineering, the importance of taste and system thinking, and the evolving landscape of coding tools and models.\n\n- [How I use LLMs from Andrej Karpathy's YouTube Channel](https://www.youtube.com/watch?v=EWvNQjAaOHw) - This video provides a practical guide to using large language models (LLMs) like ChatGPT, focusing on real-world applications, available settings, and effective strategies for both personal and professional use. It covers various platforms, models, tools, and modalities to help viewers navigate the rapidly evolving LLM ecosystem.\n\n- [How Windsurf writes 90% of your code with an Agentic IDE - Kevin Hou, head of product engineering at Codium](https://www.youtube.com/watch?v=bVNNvWq6dKo) - This presentation introduces Windsurf, an AI agent-powered code editor developed by Codium. The speaker, Kevin from the product engineering team, highlights the principles behind Windsurf, focusing on its ability to understand and anticipate developer needs through a unified timeline, adapt to coding preferences via meta-learning, and scale its intelligence with advancements in AI models.\n\n- [Vibecoding is Here - How AI is Changing How We Build Online](https://www.youtube.com/watch?v=xxA-M3HrKrc) - This content discusses the emerging trend of \"vibe coding,\" where users, both technical and non-technical, instruct AI coding agents using natural language to generate applications and websites. It explores the companies involved, the scale of their growth, the capabilities of the tools, and the potential future direction of AI-assisted software development.\n\n- [New tools for building agents with the API](https://www.youtube.com/watch?v=hciNKcLwSes) - OpenAI has launched new tools and APIs for developers to build reliable and useful agents, including the Web Search tool, File Search tool, and Computer Use tool, along with the new Responses API and Agents SDK. These tools aim to simplify the creation of complex, multi-step workflows required for effective agents. The new API and SDK provide developers with the building blocks needed to create agents that can perform tasks independently.\n\n- [Model Context Protocol (MCP): The Key To Agentic AI](https://www.youtube.com/watch?v=VChRPFUzJGA) - This video provides an overview of the Model Context Protocol (mCP), explaining what it is, why it's important, how it works, and how it compares to other protocols. mCP allows AI models, especially Large Language Models (LLMs), to access external context, such as databases or files, necessary to complete tasks. The presenter also demonstrates a practical example using an SQLite database server and Claude desktop.\n\n## Contribution Guidelines\n\nContributions to enhance this repository are highly encouraged! Please follow these simple guidelines:\n\n1. **Fork & Create Branch:** Fork this repository, then create your feature branch.\n2. **Add Your Contributions:** Clearly document new resources or improvements to existing content.\n3. **Commit & Push:** Commit your changes with a descriptive commit message, then push your branch to GitHub.\n4. **Create Pull Request:** Open a pull request and clearly describe your contribution.\n\nTogether, let's build the ultimate curated resource for Vibe Coding enthusiasts!\n\n## License\n\nThis work is dedicated to the public domain under the [CC0 1.0 Universal License](https://creativecommons.org/publicdomain/zero/1.0/).",
    "translation": "# Awesome Vibe Coding\n\n*言語: [English](README.md) | [한국어](README.ko.md) | [日本語](README.ja.md)*\n\n[Vibe Coding](https://en.wikipedia.org/wiki/Vibe_coding)は、ユーザーが単に自分の問題を説明することで、AIが必要なコードを生成するAI支援プログラミングアプローチです。これにより、開発者は詳細なコードロジックを深く理解したり、関与したりする必要がありません。プログラマーは、AIの直感（「バイブス」）と能力にコーディングタスクを委ね、詳細な実装を無視することがよくあります。この魔法のような体験により、経験のないプログラマーでも、以前は広範な開発チームを必要としたソフトウェアソリューションを構築できるようになり、ソフトウェア工学の複雑さに関する従来の仮定に挑戦します。\n\n**「Vibe Coding」**という用語は、AI研究者のAndrej Karpathyによって2025年2月に造られました。Karpathyは、*SuperWhisper*のような高度な音声認識技術を使用してAIと受動的に対話し、AIの直感的なコーディング能力に完全に依存することを説明しました。彼は、主に指示を出し、結果を観察し、必要な場合にのみ介入するというハンズオフアプローチを強調しました。\n\n## プロジェクト/プラットフォーム/ツール/サービス\n\n- [Github Copilot](https://github.com/features/copilot) - GitHub Copilotは、開発者を支援するために自動的にコードや全体の関数をリアルタイムで提案するAI駆動のペアプログラマーです。GitHubとOpenAIによって共同開発され、コードエディタ内のコンテキストを解釈し、インテリジェントでコンテキストに応じた提案を提供するために高度な機械学習を活用しています。\n\n- [Windsurf](https://codeium.com/windsurf) - Codeiumの傘下で開発されたWindsurfは、コード生成と開発者のワークフローを最適化するために設計されたAI駆動のソリューションです。高度な言語モデルを活用して、プログラマーがコードを作成し、洗練させるのを支援し、プロトタイピングと生産開発の両方を加速するシームレスな体験を提供します。\n\n- [Cursor](https://www.cursor.com/) - Cursorは、ソフトウェア開発を加速し、簡素化するために設計されたAI統合コードエディタです。直感的な編集機能と高度な生成AIを組み合わせることで、Cursorは新しい開発者と経験豊富な開発者の両方がより効率的にコードを書き、デバッグし、洗練させることを可能にします。\n\n- [Claude Code](https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview) - Claude Codeは、自然言語インタラクションを通じてコード関連のタスクを支援するために設計されたAnthropicのClaudeの専門的なバリアントです。Claudeの高度な言語能力と開発者中心の機能を組み合わせることで、Claude Codeはコードを生成、説明、洗練させ、生産性とソフトウェアの質を向上させることができます。\n\n- [Trae AI](https://www.futuretools.io/tools/trae-ai) - Trae AIは、個人や企業が高品質なコンテンツを作成し、ブランドストーリーテリングを最適化するのを支援するために設計された高度なAI駆動プラットフォームです。最先端の言語モデルを活用することで、Trae AIはマーケティング資料、ソーシャルメディアキャンペーン、戦略的ブランドコミュニケーションのためのテキスト生成を簡素化します。直感的なインターフェースとデータ駆動の洞察を備えたTrae AIは、アイデアを出し、ドラフトを作成し、コンテンツを洗練するためのより迅速でスマートな方法を提供し、ユーザーが一貫したブランドボイスを維持し、ターゲットオーディエンスに共鳴できるようにします。このプラットフォームは、ユーザーがエンゲージメントを測定し、戦略をリアルタイムで最適化するのを支援するパフォーマンス分析も統合しています。\n\n- [AlphaCode](https://alphacode.deepmind.com/) - DeepMindによって開発されたAlphaCodeは、AI駆動のコーディング分野における重要なマイルストーンを表しています。競技プログラミングの課題に取り組むために設計されたAlphaCodeは、高度な言語モデルを活用して問題文を解釈し、高品質なコードソリューションを生成し、人間のプログラマーに似た推論ステップを実行します。\n\n- [Replit Ghostwriter](https://replit.com/learn/intro-to-ghostwriter) - Replit Ghostwriterは、Replitプラットフォームに統合されたAI駆動のコーディングアシスタントで、すべてのスキルレベルの開発者がコードを書く、デバッグする、最適化するのを支援します。文脈理解とインタラクティブなプロンプトを組み合わせることで、Ghostwriterはソフトウェア開発プロセスを簡素化し、迅速なプロトタイピングを可能にします。\n\n- [OpenManus](https://github.com/mannaandpoem/OpenManus) - OpenManusは、学術論文作成プロセスを簡素化し、効率化することを目的としたオープンソースフレームワークです。現代のコラボレーション技術とカスタマイズ可能なワークフローを統合することで、研究者、作家、チームがより効率的に構造化された文書を作成できるようにします。\n\n- [Cline](https://github.com/cline/cline) - Clineは、現代の開発プラクティスと拡張性に焦点を当てたインタラクティブなコマンドライン環境を提供するオープンソースプロジェクトです。テキストベースのインターフェースの伝統的な力と追加のツールを組み合わせることで、Clineは生産性を向上させ、開発者、システム管理者、ホビイストのための効率的なワークフローを提供することを目指しています。\n\n- [Duet AI for Google Workspace](https://workspace.google.com/blog/product-announcements/duet-ai?hl=en) - Duet AIは、Googleによって設計されたコラボレーティブなAI駆動のソリューションで、Google Workspace内の生産性を向上させ、ワークフローを簡素化します。生成AIを活用することで、Duet AIはユーザーが幅広いタスクを処理するのを支援します。\n\n- [Roo Code](https://github.com/RooVetGit/Roo-Code) - Roo Codeは、あなたのエディタ内に存在するAI駆動のアシスタントで、開発プロセス全体を簡素化します。自然言語理解を備え、ワークスペース内のファイルを直接読み書きし、ターミナルコマンドを実行し、ブラウザタスクを自動化することもできます。OpenAI互換またはカスタムAIモデルと統合することで、Roo Codeは柔軟なコーディングパートナーやシステムアーキテクトからQAエンジニアやプロダクトマネージャーのような専門的な役割まで、さまざまな役割をサポートする高度に適応可能なコーディング環境を提供します。\n\n## ガイド/マニュアル/ベストプラクティス/チュートリアル/ブログ\n\n- [Vibe Coding Manual](https://www.reddit.com/r/ChatGPTCoding/comments/1j5l4xw/vibe_coding_manual/) - このRedditの投稿は、r/ChatGPTCodingサブレディットで「Vibe Coding Manual」を探求し、ChatGPTによって駆動される新しいコーディングアプローチについての洞察を提供します。人間とAIのコラボレーションがより直感的で柔軟なプログラミング方法につながる方法についてのヒント、例、個人的な経験を共有しています。\n\n- [Here’s how I use LLMs to help me write code](https://simonwillison.net/2025/Mar/11/using-llms-for-code/) - Simon Willisonのブログ投稿では、大規模言語モデル（LLMs）がコードの作成、レビュー、説明などのコーディングタスクにどのように役立つかを探ります。彼は、うまく機能するプロンプトの例を強調し、不正確または不完全な出力などの制限とリスクについて議論し、LLMsを開発者のワークフローに効果的に統合する方法についての洞察を提供します。Willisonは、正確性を確保し、品質を維持するために人間の監視の重要性を強調し、AI生成コードに依存することの可能性と課題の両方を示しています。\n\n## YouTube\n- [Vibe Coding Tutorial and Best Practices](https://www.youtube.com/watch?v=YWwS911iLhg&t=907s) - このビデオでは、「バイブコーディング」について議論し、CursorやWindsurfのようなコーディング環境でAIエージェントを使用してアプリケーション開発プロセス全体を自動化する方法を紹介します。スピーカーは、詳細な指示を指定し、AIの行動を導くためのルールを利用し、現在のモデルの制限をナビゲートするなど、これらのAIエージェントの効果を最大化するための経験とベストプラクティスを共有します。また、これらのツールを通じてコーディングのアクセシビリティと効率が向上する可能性を強調しています。\n\n- [Vibe Coding Is The Future](https://www.youtube.com/watch?v=IACHfKmZMr8&t=1606s) - このポッドキャストエピソードでは、Andrej Karpathyによって造られた「Vibe Coding」という用語について議論し、開発者がAIツールを受け入れ、迅速に反復するコーディングスタイルを指します。ホストは、Y Combinatorのパートナーであり、現在のバッチの創業者にAIが彼らのワークフローとソフトウェア工学の未来をどのように変えているかを理解するために調査しました。この議論では、製品中心のエンジニアリングへのシフト、センスとシステム思考の重要性、コーディングツールとモデルの進化する風景が強調されています。\n\n- [How I use LLMs from Andrej Karpathy's YouTube Channel](https://www.youtube.com/watch?v=EWvNQjAaOHw) - このビデオでは、ChatGPTのような大規模言語モデル（LLMs）を使用するための実用的なガイドを提供し、実世界のアプリケーション、利用可能な設定、個人およびプロフェッショナルな使用のための効果的な戦略に焦点を当てています。視聴者が急速に進化するLLMエコシステムをナビゲートできるように、さまざまなプラットフォーム、モデル、ツール、モダリティをカバーしています。\n\n- [How Windsurf writes 90% of your code with an Agentic IDE - Kevin Hou, head of product engineering at Codium](https://www.youtube.com/watch?v=bVNNvWq6dKo) - このプレゼンテーションでは、Codiumによって開発されたAIエージェント駆動のコードエディタであるWindsurfを紹介します。製品エンジニアリングチームのKevinが、Windsurfの背後にある原則を強調し、統一されたタイムラインを通じて開発者のニーズを理解し、予測し、メタラーニングを介してコーディングの好みに適応し、AIモデルの進歩に伴ってその知性をスケールさせる能力に焦点を当てています。\n\n- [Vibecoding is Here - How AI is Changing How We Build Online](https://www.youtube.com/watch?v=xxA-M3HrKrc) - このコンテンツでは、技術的および非技術的なユーザーが自然言語を使用してAIコーディングエージェントに指示を出し、アプリケーションやウェブサイトを生成する「バイブコーディング」の新たなトレンドについて議論します。関与している企業、成長の規模、ツールの能力、AI支援ソフトウェア開発の将来の方向性について探求します。\n\n- [New tools for building agents with the API](https://www.youtube.com/watch?v=hciNKcLwSes) - OpenAIは、開発者が信頼性が高く有用なエージェントを構築するための新しいツールとAPIを発表しました。これには、Web Searchツール、File Searchツール、Computer Useツール、さらに新しいResponses APIとAgents SDKが含まれます。これらのツールは、効果的なエージェントに必要な複雑で多段階のワークフローの作成を簡素化することを目的としています。新しいAPIとSDKは、開発者が独立してタスクを実行できるエージェントを作成するために必要なビルディングブロックを提供します。\n\n- [Model Context Protocol (MCP): The Key To Agentic AI](https://www.youtube.com/watch?v=VChRPFUzJGA) - このビデオでは、Model Context Protocol (mCP)の概要を提供し、それが何であるか、なぜ重要であるか、どのように機能するか、他のプロトコルとどのように比較されるかを説明します。mCPは、AIモデル、特に大規模言語モデル（LLMs）が、タスクを完了するために必要な外部コンテキスト（データベースやファイルなど）にアクセスできるようにします。プレゼンターは、SQLiteデータベースサーバーとClaudeデスクトップを使用した実用的な例も示します。\n\n## 貢献ガイドライン\n\nこのリポジトリを強化するための貢献を大いに奨励します！以下の簡単なガイドラインに従ってください：\n\n1. **フォークしてブランチを作成:** このリポジトリをフォークし、次に機能ブランチを作成します。\n2. **貢献を追加:** 新しいリソースや既存のコンテンツの改善を明確に文書化します。\n3. **コミットしてプッシュ:** 説明的なコミットメッセージで変更をコミットし、次にブランチをGitHubにプッシュします。\n4. **プルリクエストを作成:** プルリクエストを開き、貢献内容を明確に説明します。\n\n共に、Vibe Coding愛好者のための究極のキュレーションリソースを構築しましょう！\n\n## ライセンス\n\nこの作品は、[CC0 1.0 Universal License](https://creativecommons.org/publicdomain/zero/1.0/)の下でパブリックドメインに寄付されています。"
  }
}