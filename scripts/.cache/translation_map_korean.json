{
  "line_0_66": {
    "source": "# Awesome Vibe Coding\n\n*Language: [English](README.md) | [한국어](README.ko.md) | [日本語](README.ja.md)*\n\n[Vibe Coding](https://en.wikipedia.org/wiki/Vibe_coding) is an AI-assisted programming approach where users simply describe their problem, and AI generates the necessary code without requiring the developer to deeply understand or engage with detailed code logic. Programmers entrust coding tasks to the AI's intuition (\"vibes\") and capabilities, often ignoring detailed implementations. This magical-like experience allows even inexperienced programmers to build software solutions previously requiring extensive development teams, challenging traditional assumptions of software engineering complexity.\n\nThe term **\"Vibe Coding\"** was coined by AI researcher Andrej Karpathy in February 2025. Karpathy described using advanced voice-recognition technologies such as *SuperWhisper* to interact passively with AI, relying entirely on AI's intuitive coding abilities. He emphasized a hands-off approach, primarily instructing and observing outcomes, and only intervening when necessary.\n\n## Projects/Platforms/Tools/Services\n\n- [Github Copilot](https://github.com/features/copilot)- GitHub Copilot is an AI-powered pair programmer designed to assist developers by automatically suggesting code and entire functions in real-time. Developed collaboratively by GitHub and OpenAI, it leverages advanced machine learning to interpret the context in your code editor and provide intelligent, context-aware suggestions.\n\n- [Windsurf](https://codeium.com/windsurf) - Windsurf, developed under the Codeium umbrella, is an AI-driven solution designed to optimize code generation and developer workflows. It leverages advanced language models to assist programmers in crafting and refining code, offering a seamless experience that accelerates both prototyping and production development.\n\n- [Cursor](https://www.cursor.com/) - Cursor is an AI-integrated code editor designed to accelerate and simplify software development. By combining intuitive editing features with advanced generative AI, Cursor empowers both new and experienced developers to write, debug, and refine code more efficiently\n\n- [Claude Code](https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview) - Claude Code is a specialized variant of Anthropic’s Claude, designed to assist with code-related tasks through natural language interactions. By combining Claude’s advanced language capabilities with developer-centric features, Claude Code can generate, explain, and refine code to improve both productivity and software quality.\n\n- [Trae AI](https://www.futuretools.io/tools/trae-ai) - Trae AI is an advanced AI-driven platform designed to help individuals and businesses create high-quality content and optimize their brand storytelling. By leveraging cutting-edge language models, Trae AI streamlines the creative process—whether you’re generating text for marketing materials, social media campaigns, or strategic brand communication. With its intuitive interface and data-driven insights, Trae AI offers a faster, smarter way to ideate, draft, and refine content, enabling users to maintain a consistent brand voice and resonate with their target audience. The platform also integrates performance analytics to help users measure engagement and optimize their strategies in real time.\n\n- [AlphaCode](https://alphacode.deepmind.com/) - AlphaCode, developed by DeepMind, represents a significant milestone in the field of AI-driven coding. Designed to tackle competitive programming challenges, AlphaCode leverages advanced language models to interpret problem statements, generate high-quality code solutions, and perform reasoning steps akin to those of human programmers. \n\n- [Replit Ghostwriter](https://replit.com/learn/intro-to-ghostwriter) - Replit Ghostwriter is an AI-powered coding assistant integrated into the Replit platform, designed to help developers at all skill levels write, debug, and optimize code. By combining contextual understanding with interactive prompts, Ghostwriter streamlines the software development process and enables quick prototyping. \n\n- [OpenManus](https://github.com/mannaandpoem/OpenManus) - OpenManus is an open-source framework aimed at simplifying and streamlining the process of academic manuscript creation. By integrating modern collaboration techniques and customizable workflows, it empowers researchers, writers, and teams to produce well-structured documents more efficiently.\n\n- [Cline](https://github.com/cline/cline) - Cline is an open-source project that provides an interactive command-line environment with a focus on modern development practices and extensibility. By combining the traditional power of a text-based interface with additional tooling, Cline aims to enhance productivity and offer a streamlined workflow for developers, system administrators, and hobbyists alike.\n\n- [Duet AI for Google Workspace](https://workspace.google.com/blog/product-announcements/duet-ai?hl=en) - Duet AI is a collaborative, AI-driven solution by Google designed to enhance productivity and streamline workflows within Google Workspace. By leveraging generative AI, Duet AI aims to help users handle a wide range of tasks\n\n- [Roo Code](https://github.com/RooVetGit/Roo-Code) - Roo Code is an AI-driven assistant that lives in your editor, streamlining the entire development process. Equipped with natural language understanding, it can read and write files directly in your workspace, run terminal commands, and even automate browser tasks. By integrating with any OpenAI-compatible or custom AI model, Roo Code offers a highly adaptable coding environment that supports various roles, from a flexible coding partner or system architect to specialized positions like QA engineer or product manager.\n\n## Guides/Manual/Best Practices/Tutorials/Blogs\n\n- [Vibe Coding Manual](https://www.reddit.com/r/ChatGPTCoding/comments/1j5l4xw/vibe_coding_manual/) - This Reddit post on the r/ChatGPTCoding subreddit explores the “Vibe Coding Manual,” offering insights into a novel coding approach powered by ChatGPT. It shares tips, examples, and personal experiences on how human-AI collaboration can lead to more intuitive and flexible programming methods, helping developers enhance their skills and discover creative solutions.\n\n- [Here’s how I use LLMs to help me write code](https://simonwillison.net/2025/Mar/11/using-llms-for-code/) - In his blog post, Simon Willison explores how large language models (LLMs) can help with coding tasks such as writing, reviewing, and explaining code. He highlights examples of prompts that work well, discusses the limitations and risks—such as incorrect or incomplete outputs—and provides insights into effective ways to integrate LLMs into a developer’s workflow. Willison also underscores the importance of human oversight to ensure accuracy and maintain quality, illustrating both the potential and the challenges of relying on AI-generated code.\n\n## YouTube\n- [Vibe Coding Tutorial and Best Practices](https://www.youtube.com/watch?v=YWwS911iLhg&t=907s) - This video discusses \"vibe coding,\" which involves using AI agents in coding environments like Cursor or Windsurf to automate the entire application development process. The speaker shares their experiences and best practices for maximizing the effectiveness of these AI agents, including specifying detailed instructions, utilizing rules to guide the AI's behavior, and navigating the limitations of current models. They also highlight the potential for increased coding accessibility and efficiency through these tools.\n\n- [Vibe Coding Is The Future](https://www.youtube.com/watch?v=IACHfKmZMr8&t=1606s) - This podcast episode discusses \"Vibe Coding,\" a term coined by Andrej Karpathy, referring to a coding style where developers embrace AI tools and iterate rapidly, potentially transforming the role of software engineers. The hosts, partners at Y Combinator, surveyed founders in their current batch to understand how AI is changing their workflows and the future of software engineering. The discussion highlights the shift towards product-focused engineering, the importance of taste and system thinking, and the evolving landscape of coding tools and models.\n\n- [How I use LLMs from Andrej Karpathy's YouTube Channel](https://www.youtube.com/watch?v=EWvNQjAaOHw) - This video provides a practical guide to using large language models (LLMs) like ChatGPT, focusing on real-world applications, available settings, and effective strategies for both personal and professional use. It covers various platforms, models, tools, and modalities to help viewers navigate the rapidly evolving LLM ecosystem.\n\n- [How Windsurf writes 90% of your code with an Agentic IDE - Kevin Hou, head of product engineering at Codium](https://www.youtube.com/watch?v=bVNNvWq6dKo) - This presentation introduces Windsurf, an AI agent-powered code editor developed by Codium. The speaker, Kevin from the product engineering team, highlights the principles behind Windsurf, focusing on its ability to understand and anticipate developer needs through a unified timeline, adapt to coding preferences via meta-learning, and scale its intelligence with advancements in AI models.\n\n- [Vibecoding is Here - How AI is Changing How We Build Online](https://www.youtube.com/watch?v=xxA-M3HrKrc) - This content discusses the emerging trend of \"vibe coding,\" where users, both technical and non-technical, instruct AI coding agents using natural language to generate applications and websites. It explores the companies involved, the scale of their growth, the capabilities of the tools, and the potential future direction of AI-assisted software development.\n\n- [New tools for building agents with the API](https://www.youtube.com/watch?v=hciNKcLwSes) - OpenAI has launched new tools and APIs for developers to build reliable and useful agents, including the Web Search tool, File Search tool, and Computer Use tool, along with the new Responses API and Agents SDK. These tools aim to simplify the creation of complex, multi-step workflows required for effective agents. The new API and SDK provide developers with the building blocks needed to create agents that can perform tasks independently.\n\n- [Model Context Protocol (MCP): The Key To Agentic AI](https://www.youtube.com/watch?v=VChRPFUzJGA) - This video provides an overview of the Model Context Protocol (mCP), explaining what it is, why it's important, how it works, and how it compares to other protocols. mCP allows AI models, especially Large Language Models (LLMs), to access external context, such as databases or files, necessary to complete tasks. The presenter also demonstrates a practical example using an SQLite database server and Claude desktop.\n\n## Contribution Guidelines\n\nContributions to enhance this repository are highly encouraged! Please follow these simple guidelines:\n\n1. **Fork & Create Branch:** Fork this repository, then create your feature branch.\n2. **Add Your Contributions:** Clearly document new resources or improvements to existing content.\n3. **Commit & Push:** Commit your changes with a descriptive commit message, then push your branch to GitHub.\n4. **Create Pull Request:** Open a pull request and clearly describe your contribution.\n\nTogether, let's build the ultimate curated resource for Vibe Coding enthusiasts!\n\n## License\n\nThis work is dedicated to the public domain under the [CC0 1.0 Universal License](https://creativecommons.org/publicdomain/zero/1.0/).",
    "translation": "# Awesome Vibe Coding\n\n*Language: [English](README.md) | [한국어](README.ko.md) | [日本語](README.ja.md)*\n\n[Vibe Coding](https://en.wikipedia.org/wiki/Vibe_coding)은 사용자가 문제를 간단히 설명하면 AI가 필요한 코드를 생성하는 AI 지원 프로그래밍 접근 방식입니다. 이 과정에서 개발자는 코드 논리를 깊이 이해하거나 세부 사항에 관여할 필요가 없습니다. 프로그래머는 코딩 작업을 AI의 직관(\"vibes\")과 능력에 맡기며, 종종 세부 구현을 무시합니다. 이러한 마법 같은 경험은 경험이 없는 프로그래머조차도 이전에 광범위한 개발 팀이 필요했던 소프트웨어 솔루션을 구축할 수 있게 하여 소프트웨어 공학의 복잡성에 대한 전통적인 가정을 도전합니다.\n\n**\"Vibe Coding\"**이라는 용어는 AI 연구자 Andrej Karpathy에 의해 2025년 2월에 만들어졌습니다. Karpathy는 *SuperWhisper*와 같은 고급 음성 인식 기술을 사용하여 AI와 수동적으로 상호작용하며, AI의 직관적인 코딩 능력에 전적으로 의존한다고 설명했습니다. 그는 주로 지시하고 결과를 관찰하며, 필요할 때만 개입하는 비개입적 접근 방식을 강조했습니다.\n\n## Projects/Platforms/Tools/Services\n\n- [Github Copilot](https://github.com/features/copilot) - GitHub Copilot은 개발자를 지원하기 위해 실시간으로 코드와 전체 함수를 자동으로 제안하는 AI 기반의 페어 프로그래머입니다. GitHub와 OpenAI가 협력하여 개발한 이 도구는 고급 기계 학습을 활용하여 코드 편집기 내의 맥락을 해석하고 지능적이고 맥락 인식적인 제안을 제공합니다.\n\n- [Windsurf](https://codeium.com/windsurf) - Codeium의 지원 하에 개발된 Windsurf는 코드 생성 및 개발자 워크플로를 최적화하기 위해 설계된 AI 기반 솔루션입니다. 고급 언어 모델을 활용하여 프로그래머가 코드를 작성하고 다듬는 데 도움을 주며, 프로토타입 및 생산 개발을 가속화하는 원활한 경험을 제공합니다.\n\n- [Cursor](https://www.cursor.com/) - Cursor는 소프트웨어 개발을 가속화하고 단순화하기 위해 설계된 AI 통합 코드 편집기입니다. 직관적인 편집 기능과 고급 생성 AI를 결합하여, Cursor는 신입 및 경험이 풍부한 개발자가 코드를 더 효율적으로 작성하고 디버깅하며 다듬을 수 있도록 합니다.\n\n- [Claude Code](https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview) - Claude Code는 자연어 상호작용을 통해 코드 관련 작업을 지원하도록 설계된 Anthropic의 Claude의 특수 변형입니다. Claude의 고급 언어 능력과 개발자 중심 기능을 결합하여, Claude Code는 코드를 생성하고 설명하며 다듬어 생산성과 소프트웨어 품질을 향상시킬 수 있습니다.\n\n- [Trae AI](https://www.futuretools.io/tools/trae-ai) - Trae AI는 개인 및 기업이 고품질 콘텐츠를 생성하고 브랜드 스토리텔링을 최적화하는 데 도움을 주기 위해 설계된 고급 AI 기반 플랫폼입니다. 최첨단 언어 모델을 활용하여, Trae AI는 마케팅 자료, 소셜 미디어 캠페인 또는 전략적 브랜드 커뮤니케이션을 위한 텍스트 생성 등 창의적인 프로세스를 간소화합니다. 직관적인 인터페이스와 데이터 기반 통찰력을 통해 Trae AI는 아이디어를 구상하고 초안을 작성하며 콘텐츠를 다듬는 더 빠르고 스마트한 방법을 제공하여 사용자가 일관된 브랜드 목소리를 유지하고 목표 청중과 공감할 수 있도록 합니다. 이 플랫폼은 또한 사용자가 참여도를 측정하고 실시간으로 전략을 최적화할 수 있도록 성과 분석을 통합합니다.\n\n- [AlphaCode](https://alphacode.deepmind.com/) - DeepMind에서 개발한 AlphaCode는 AI 기반 코딩 분야에서 중요한 이정표를 나타냅니다. 경쟁 프로그래밍 문제를 해결하기 위해 설계된 AlphaCode는 고급 언어 모델을 활용하여 문제 설명을 해석하고 고품질 코드 솔루션을 생성하며 인간 프로그래머와 유사한 추론 단계를 수행합니다.\n\n- [Replit Ghostwriter](https://replit.com/learn/intro-to-ghostwriter) - Replit Ghostwriter는 Replit 플랫폼에 통합된 AI 기반 코딩 도우미로, 모든 기술 수준의 개발자가 코드를 작성하고 디버깅하며 최적화하는 데 도움을 줍니다. 맥락 이해와 상호작용 프롬프트를 결합하여 Ghostwriter는 소프트웨어 개발 프로세스를 간소화하고 빠른 프로토타입을 가능하게 합니다.\n\n- [OpenManus](https://github.com/mannaandpoem/OpenManus) - OpenManus는 학술 원고 작성 프로세스를 단순화하고 효율적으로 만드는 것을 목표로 하는 오픈 소스 프레임워크입니다. 현대적인 협업 기술과 사용자 정의 가능한 워크플로를 통합하여 연구자, 작가 및 팀이 잘 구조화된 문서를 더 효율적으로 작성할 수 있도록 지원합니다.\n\n- [Cline](https://github.com/cline/cline) - Cline은 현대 개발 관행과 확장성에 중점을 둔 대화형 명령줄 환경을 제공하는 오픈 소스 프로젝트입니다. 텍스트 기반 인터페이스의 전통적인 힘과 추가 도구를 결합하여 Cline은 개발자, 시스템 관리자 및 취미로 하는 사람들을 위한 생산성을 향상시키고 간소화된 워크플로를 제공합니다.\n\n- [Duet AI for Google Workspace](https://workspace.google.com/blog/product-announcements/duet-ai?hl=en) - Duet AI는 Google Workspace 내에서 생산성을 향상하고 워크플로를 간소화하기 위해 설계된 Google의 협업 AI 기반 솔루션입니다. 생성 AI를 활용하여 Duet AI는 사용자가 다양한 작업을 처리하는 데 도움을 줍니다.\n\n- [Roo Code](https://github.com/RooVetGit/Roo-Code) - Roo Code는 편집기 내에서 작동하는 AI 기반 도우미로, 전체 개발 프로세스를 간소화합니다. 자연어 이해 기능을 갖춘 Roo Code는 작업 공간 내에서 파일을 읽고 쓸 수 있으며, 터미널 명령을 실행하고 브라우저 작업을 자동화할 수 있습니다. OpenAI 호환 또는 사용자 정의 AI 모델과 통합하여 다양한 역할을 지원하는 매우 적응 가능한 코딩 환경을 제공합니다.\n\n## Guides/Manual/Best Practices/Tutorials/Blogs\n\n- [Vibe Coding Manual](https://www.reddit.com/r/ChatGPTCoding/comments/1j5l4xw/vibe_coding_manual/) - 이 Reddit 게시물은 r/ChatGPTCoding 서브레딧에서 \"Vibe Coding Manual\"을 탐구하며 ChatGPT에 의해 지원되는 새로운 코딩 접근 방식에 대한 통찰력을 제공합니다. 인간-AI 협력이 더 직관적이고 유연한 프로그래밍 방법으로 이어질 수 있는 방법에 대한 팁, 예제 및 개인 경험을 공유합니다.\n\n- [Here’s how I use LLMs to help me write code](https://simonwillison.net/2025/Mar/11/using-llms-for-code/) - Simon Willison은 그의 블로그 게시물에서 대형 언어 모델(LLMs)이 코드 작성, 검토 및 설명과 같은 코딩 작업에 어떻게 도움을 줄 수 있는지 탐구합니다. 그는 잘 작동하는 프롬프트의 예를 강조하고, 잘못되거나 불완전한 출력과 같은 한계와 위험에 대해 논의하며, LLM을 개발자의 워크플로에 효과적으로 통합하는 방법에 대한 통찰력을 제공합니다. Willison은 또한 정확성을 보장하고 품질을 유지하기 위해 인간의 감독이 중요하다는 점을 강조하며, AI 생성 코드에 의존하는 것의 잠재력과 도전 과제를 설명합니다.\n\n## YouTube\n- [Vibe Coding Tutorial and Best Practices](https://www.youtube.com/watch?v=YWwS911iLhg&t=907s) - 이 비디오는 \"vibe coding\"에 대해 논의하며, Cursor 또는 Windsurf와 같은 코딩 환경에서 AI 에이전트를 사용하여 전체 애플리케이션 개발 프로세스를 자동화하는 방법을 설명합니다. 발표자는 이러한 AI 에이전트의 효과를 극대화하기 위한 경험과 모범 사례를 공유하며, 세부 지시 사항을 지정하고 AI의 행동을 안내하는 규칙을 활용하며 현재 모델의 한계를 탐색하는 방법을 강조합니다. 또한 이러한 도구를 통해 코딩 접근성과 효율성이 증가할 가능성을 강조합니다.\n\n- [Vibe Coding Is The Future](https://www.youtube.com/watch?v=IACHfKmZMr8&t=1606s) - 이 팟캐스트 에피소드는 Andrej Karpathy가 만든 용어인 \"Vibe Coding\"에 대해 논의하며, 개발자가 AI 도구를 수용하고 빠르게 반복하는 코딩 스타일을 설명합니다. Y Combinator의 파트너인 호스트들은 현재 배치의 창립자들을 조사하여 AI가 그들의 워크플로와 소프트웨어 공학의 미래를 어떻게 변화시키고 있는지 이해하고자 했습니다. 이 논의는 제품 중심의 엔지니어링으로의 전환, 취향과 시스템 사고의 중요성, 코딩 도구 및 모델의 진화하는 풍경을 강조합니다.\n\n- [How I use LLMs from Andrej Karpathy's YouTube Channel](https://www.youtube.com/watch?v=EWvNQjAaOHw) - 이 비디오는 ChatGPT와 같은 대형 언어 모델(LLMs)을 사용하는 실용적인 가이드를 제공하며, 실제 응용 프로그램, 사용 가능한 설정 및 개인 및 전문적인 사용을 위한 효과적인 전략에 중점을 둡니다. 다양한 플랫폼, 모델, 도구 및 양식을 다루어 시청자가 빠르게 발전하는 LLM 생태계를 탐색하는 데 도움을 줍니다.\n\n- [How Windsurf writes 90% of your code with an Agentic IDE - Kevin Hou, head of product engineering at Codium](https://www.youtube.com/watch?v=bVNNvWq6dKo) - 이 발표는 Codium에서 개발한 AI 에이전트 기반 코드 편집기인 Windsurf를 소개합니다. 제품 엔지니어링 팀의 Kevin은 Windsurf의 원칙을 강조하며, 통합된 타임라인을 통해 개발자의 요구를 이해하고 예측하며, 메타 학습을 통해 코딩 선호도에 적응하고, AI 모델의 발전에 따라 지능을 확장하는 능력에 대해 설명합니다.\n\n- [Vibecoding is Here - How AI is Changing How We Build Online](https://www.youtube.com/watch?v=xxA-M3HrKrc) - 이 콘텐츠는 기술적 및 비기술적 사용자 모두가 자연어를 사용하여 AI 코딩 에이전트에게 애플리케이션과 웹사이트를 생성하도록 지시하는 \"vibe coding\"의 새로운 트렌드에 대해 논의합니다. 관련 기업, 성장 규모, 도구의 기능 및 AI 지원 소프트웨어 개발의 잠재적인 미래 방향을 탐구합니다.\n\n- [New tools for building agents with the API](https://www.youtube.com/watch?v=hciNKcLwSes) - OpenAI는 개발자가 신뢰할 수 있고 유용한 에이전트를 구축할 수 있도록 새로운 도구와 API를 출시했습니다. 여기에는 웹 검색 도구, 파일 검색 도구 및 컴퓨터 사용 도구와 함께 새로운 응답 API 및 에이전트 SDK가 포함됩니다. 이러한 도구는 효과적인 에이전트를 위한 복잡한 다단계 워크플로의 생성을 단순화하는 것을 목표로 합니다. 새로운 API와 SDK는 개발자가 독립적으로 작업을 수행할 수 있는 에이전트를 만들기 위해 필요한 빌딩 블록을 제공합니다.\n\n- [Model Context Protocol (MCP): The Key To Agentic AI](https://www.youtube.com/watch?v=VChRPFUzJGA) - 이 비디오는 모델 컨텍스트 프로토콜(MCP)에 대한 개요를 제공하며, 그것이 무엇인지, 왜 중요한지, 어떻게 작동하는지, 다른 프로토콜과 어떻게 비교되는지를 설명합니다. MCP는 AI 모델, 특히 대형 언어 모델(LLMs)이 작업을 완료하는 데 필요한 외부 컨텍스트(예: 데이터베이스 또는 파일)에 접근할 수 있도록 합니다. 발표자는 SQLite 데이터베이스 서버와 Claude 데스크톱을 사용한 실용적인 예를 보여줍니다.\n\n## Contribution Guidelines\n\n이 저장소를 향상시키기 위한 기여를 적극 권장합니다! 다음 간단한 지침을 따라 주세요:\n\n1. **Fork & Create Branch:** 이 저장소를 포크한 후, 기능 브랜치를 생성하세요.\n2. **Add Your Contributions:** 새로운 리소스나 기존 콘텐츠의 개선 사항을 명확하게 문서화하세요.\n3. **Commit & Push:** 설명적인 커밋 메시지와 함께 변경 사항을 커밋한 후, GitHub에 브랜치를 푸시하세요.\n4. **Create Pull Request:** 풀 리퀘스트를 열고 기여 내용을 명확하게 설명하세요.\n\n함께 Vibe Coding 애호가를 위한 궁극적인 큐레이션된 리소스를 구축합시다!\n\n## License\n\n이 작업은 [CC0 1.0 Universal License](https://creativecommons.org/publicdomain/zero/1.0/)에 따라 공공 도메인에 헌정됩니다."
  },
  "line_3_5": {
    "source": "\n![Vibe Coding Meme](images/vibecoding-meme.png)\n",
    "translation": "Here is the translated content:\n\n![Vibe Coding Meme](images/vibecoding-meme.png)"
  },
  "line_53_58": {
    "source": "- [AI Development Tool Showdown: Copilot, Cursor, Cline, Devin, Windsurf!(Japanese)](https://www.youtube.com/watch?v=EQHXIVItNxs) - This is a summary of a panel discussion on AI-assisted coding tools. The speakers share their experiences using tools like Cursor, Copilot, Debby, and others, focusing on practical applications, comparisons, and future implications. The discussion covers a range of topics, from basic tool overviews to advanced techniques and the changing role of developers in an AI-driven environment.\n\n- [Model Context Protocol (MCP): The Key To Agentic AI](https://www.youtube.com/watch?v=VChRPFUzJGA) - This video provides an overview of the Model Context Protocol (mCP), explaining what it is, why it's important, how it works, and how it compares to other protocols. mCP allows AI models, especially Large Language Models (LLMs), to access external context, such as databases or files, necessary to complete tasks. The presenter also demonstrates a practical example using an SQLite database server and Claude desktop.\n\n- [MCP causing a frenzy these days! I'll break it down for you in under 10 minutes](https://www.youtube.com/watch?v=EswVjHZMn74) - This content introduces the Model Context Protocol (mCP), a standardized way for AI applications to connect to external systems. It explains what mCP is, how it works, and how to build your own mCP server using the Python SDK, and connect it to apps like CLA and csor. The speaker believes that mCP is a valuable skill for developers to learn.\n",
    "translation": "Here is the translated content in Korean, following your guidelines:\n\n- [AI 개발 도구 대결: Copilot, Cursor, Cline, Devin, Windsurf!(Japanese)](https://www.youtube.com/watch?v=EQHXIVItNxs) - 이는 AI 지원 코딩 도구에 대한 패널 토론의 요약입니다. 발표자들은 Cursor, Copilot, Debby 등과 같은 도구를 사용한 경험을 공유하며, 실용적인 응용, 비교 및 미래의 함의에 초점을 맞춥니다. 이 논의는 기본 도구 개요에서 고급 기술 및 AI 주도 환경에서 개발자의 변화하는 역할에 이르기까지 다양한 주제를 다룹니다.\n\n- [모델 컨텍스트 프로토콜 (MCP): 에이전틱 AI의 열쇠](https://www.youtube.com/watch?v=VChRPFUzJGA) - 이 비디오는 모델 컨텍스트 프로토콜(mCP)에 대한 개요를 제공하며, 그것이 무엇인지, 왜 중요한지, 어떻게 작동하는지, 그리고 다른 프로토콜과 어떻게 비교되는지를 설명합니다. mCP는 AI 모델, 특히 대형 언어 모델(LLMs)이 작업을 완료하는 데 필요한 데이터베이스나 파일과 같은 외부 컨텍스트에 접근할 수 있도록 합니다. 발표자는 또한 SQLite 데이터베이스 서버와 Claude 데스크탑을 사용한 실용적인 예제를 시연합니다.\n\n- [요즘 MCP가 열풍을 일으키고 있습니다! 10분 이내에 설명해 드리겠습니다](https://www.youtube.com/watch?v=EswVjHZMn74) - 이 콘텐츠는 AI 애플리케이션이 외부 시스템에 연결하는 표준화된 방법인 모델 컨텍스트 프로토콜(mCP)을 소개합니다. mCP가 무엇인지, 어떻게 작동하는지, Python SDK를 사용하여 자신의 mCP 서버를 구축하고 CLA 및 csor와 같은 앱에 연결하는 방법을 설명합니다. 발표자는 mCP가 개발자들이 배워야 할 가치 있는 기술이라고 믿고 있습니다."
  },
  "line_22_25": {
    "source": "- [AlphaCode](https://alphacode.deepmind.com/) - AlphaCode, developed by DeepMind, represents a significant milestone in the field of AI-driven coding. Designed to tackle competitive programming challenges, AlphaCode leverages advanced language models to interpret problem statements, generate high-quality code solutions, and perform reasoning steps akin to those of human programmers.\n\n- [Replit Ghostwriter](https://replit.com/learn/intro-to-ghostwriter) - Replit Ghostwriter is an AI-powered coding assistant integrated into the Replit platform, designed to help developers at all skill levels write, debug, and optimize code. By combining contextual understanding with interactive prompts, Ghostwriter streamlines the software development process and enables quick prototyping.\n",
    "translation": "Here is the translated content:\n\n- [AlphaCode](https://alphacode.deepmind.com/) - AlphaCode, DeepMind에서 개발한, AI 기반 코딩 분야에서 중요한 이정표를 나타냅니다. 경쟁 프로그래밍 문제를 해결하기 위해 설계된 AlphaCode는 고급 언어 모델을 활용하여 문제 설명을 해석하고, 고품질 코드 솔루션을 생성하며, 인간 프로그래머와 유사한 추론 단계를 수행합니다.\n\n- [Replit Ghostwriter](https://replit.com/learn/intro-to-ghostwriter) - Replit Ghostwriter는 Replit 플랫폼에 통합된 AI 기반 코딩 도우미로, 모든 기술 수준의 개발자가 코드를 작성하고, 디버깅하며, 최적화하는 데 도움을 주기 위해 설계되었습니다. 맥락 이해와 상호작용 프롬프트를 결합함으로써, Ghostwriter는 소프트웨어 개발 프로세스를 간소화하고 빠른 프로토타이핑을 가능하게 합니다."
  },
  "line_33_35": {
    "source": "\n- [Goose](https://block.github.io/goose/) - Goose is an open-source coding assistant developed by Block, designed to assist developers through seamless integration with various AI providers, including support for OpenAI-compatible platforms, Anthropic, Ollama and several others. Goose operates in either a command line or interactive mode and optionally integrates with VSCode or other IDEs via the Model Context Protocol (MCP), offering a robust environment for code generation and editing. It aims to enhance productivity by providing efficient workflows and versatile support in development tasks.\n",
    "translation": "Here is the translated content:\n\n- [Goose](https://block.github.io/goose/) - Goose는 Block에서 개발한 오픈 소스 코딩 어시스턴트로, OpenAI 호환 플랫폼, Anthropic, Ollama 및 여러 다른 AI 제공업체와의 원활한 통합을 통해 개발자를 지원하도록 설계되었습니다. Goose는 명령줄 모드 또는 대화형 모드에서 작동하며, 선택적으로 Model Context Protocol (MCP)을 통해 VSCode 또는 기타 IDE와 통합되어 코드 생성 및 편집을 위한 강력한 환경을 제공합니다. 이는 효율적인 워크플로우와 개발 작업에서의 다재다능한 지원을 제공하여 생산성을 향상시키는 것을 목표로 합니다."
  }
}